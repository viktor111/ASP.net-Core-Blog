@model Blog.ViewModels.AdminViewModel

@{
    ViewData["Title"] = "Manage";
}
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
<h1>Users</h1>

<table class="table">

    @foreach (var user in Model.Users)
    {

        var roles = await UserManager.GetRolesAsync(user);

        <tr>
            @if (await UserManager.IsInRoleAsync(user, "Admin"))
            {
                <td>
                    <span>Id: </span>
                    <p>@user.Id</p>
                    <span>Email: </span>
                    <p>@user.Email</p>
                    <p style="color: gold">Admin</p>
                    <a class="btn btn-info" asp-action="Details" asp-route-id="@user.Id">Details</a>
                </td>
            }
            else
            {

                <td class="table-dark">

                    <span>Id: </span>
                    <p>@user.Id</p>
                    <span>Email: </span>
                    <p>@user.Email</p>
                    <span>Roles: </span>
                    @foreach (var role in roles)
                    {
                        <p>@role</p>
                    }

                    <a class="btn btn-info" asp-action="Details" asp-route-id="@user.Id">Details</a>
                    <div class="float-right">
                        <form asp-action="DeleteUser" asp-controller="Admin" asp-route-id="@user.Id" method="post">
                            <input type="submit" value="Delete" class="btn btn-danger" />
                        </form>
                    </div>
                    <form asp-action="RestrictUser" asp-controller="Admin" asp-route-id="@user.Id" method="post">
                        <input type="submit" value="Ban" class="btn btn-warning" />
                    </form>
                </td>

            }

        </tr>
    }
</table>
