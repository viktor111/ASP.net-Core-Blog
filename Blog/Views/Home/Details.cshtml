@model Blog.ViewModels.ArticeViewModel
@{
    ViewData["Title"] = "Detail";
}
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12 text-center">
        <h1 style="color: darkred !important">@Model.Title</h1>
    </div>
    <div class="col-lg-12 col-md-12 col-sm-12 text-left">
        <span class="text-info">@Model.Author</span>
    </div>
    <div class="col-lg-12 col-md-12 col-sm-12 text-lg-left">
        @Html.Raw(Model.Content)
    </div>

    <div class="col-lg-12 col-md-12 col-sm-12">

    </div>
</div>
<div class="col-lg-12 col-md-12 col-sm-12"><hr style="background-color: azure" /></div>
<div class="row">

    @*<div class="col-lg-12 col-md-12 col-sm-12">
        @await this.Component.InvokeAsync("Pager", new { pagingList = this.Model.Comments })
    </div>*@

    <div class="col-lg-12 col-md-12 col-sm-12">
        <h3>Comments</h3>
    </div>
    <div class="col-lg-12 col-md-12 col-sm-12">
        <table>
            @foreach (var comment in Model.Comments)
            {

                <tr>
                    <td>
                        <p style="color: lightgray">@comment.Date.ToString("dddd, dd MMMM yyyy")</p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <p style="background-color: darkred; color:black; border-radius: 20px">@comment.Content</p>
                    </td>
                    @if (this.User.IsInRole("Admin"))
                    {
                        <td>
                            <form asp-action="DeleteComment" asp-controller="Home" asp-route-id="@comment.Id" method="post">
                                <input type="submit" value="Delete" class="btn btn-danger" />
                            </form>
                        </td>
                    }
                </tr>
            }
        </table>
    </div>
    @if (SignInManager.IsSignedIn(User))
    {
        <div class="col-lg-12 col-md-12 col-sm-12">
            <form asp-action="Details">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="CommentContent" class="control-label">Comment</label>
                    <input rows="5" cols="40" asp-for="CommentContent" class="form-control" />
                    <span asp-validation-for="CommentContent" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Post Comment" class="btn btn-danger" />
                </div>
            </form>
        </div>
    }
</div>

<nav>
    <ul class="pagination justify-content-center">
        @if (this.Model.CurrentPage == 1)
        {
            <li class="page-item disabled">
                <a class="page-link" href="#">Previous</a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class="page-link"
                   asp-route="forumCategory"
                   asp-route-id="@this.Model.Id"
                   asp-route-page="@(this.Model.CurrentPage - 1)">Previous</a>
            </li>
        }

        @for (int i = 1; i <= this.Model.PagesCount; i++)
        {
            var active = i == this.Model.CurrentPage ? "active" : string.Empty;
            <li class="page-item @active">
                <a class="page-link"
                   asp-route="forumCategory"
                   asp-route-id="@this.Model.Id"
                   asp-route-page="2">@i</a>
            </li>
        }

        @if (this.Model.CurrentPage == this.Model.PagesCount)
        {
            <li class="page-item disabled">
                <a class="page-link" href="#">Next</a>
            </li>
        }
        else
        {
            <li class="page-item">
                <a class="page-link"
                   asp-route="forumCategory"
                   asp-route-id="@this.Model.Id"
                   asp-route-page="@(this.Model.CurrentPage + 1)">Next</a>
            </li>
        }
    </ul>
</nav>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

